// Use DBML to define your database structure
// Docs: https://github.com/holistics/dbml/tree/master/dbml-homepage/docs

Table follows {
  following_id integer
  follower_id integer
  created_at timestamp 
}

Table users {
  id integer [primary key]
  username varchar
  email varchar
  created_at timestamp
}

Table users_profile {
  id integer [primary key]
  user_id integer
  profile_image varchar
  website_url varchar
  location varchar
  bio varchar
}

Table posts {
  id integer [primary key]
  title varchar
  body text [note: 'Content of the post']
  user_id integer
  created_at timestamp
}

Table tags {
  id integer [primary key]
  tag_name varchar
}

Table post_tags {
  post_id integer
  tag_id integer
}

Table likes {
  post_id integer
  user_id integer
}


Table user_security {
  id integer [primary key]
  password varchar
  user_id integer
}

Table comments {
  post_id integer
  user_id integer
  content varchar
  created_at timestamp
}

Table reading_list {
  id integer [primary key]
  user_id integer
  post_id integer
}

Ref: posts.user_id > users.id 

Ref: users.id < follows.following_id

Ref: users.id < follows.follower_id

Ref: post_tags.post_id > posts.id

Ref: post_tags.tag_id > tags.id

Ref: user_security.user_id - users.id

Ref: likes.post_id > posts.id

Ref: likes.user_id > users.id

Ref: comments.user_id > users.id

Ref: comments.post_id > posts.id

Ref: reading_list.user_id > users.id

Ref: reading_list.post_id > posts.id

Ref: users.id - users_profile.user_id



